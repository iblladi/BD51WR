-- Storages
ALTER DATABASE EMODE 
ADD FILEGROUP SF_FG_01;

ALTER DATABASE EMODE 
ADD FILEGROUP SF_FG_02; 

ALTER DATABASE EMODE 
ADD FILEGROUP SF_FG_03; 

ALTER DATABASE EMODE 
ADD FILEGROUP SF_FG_04; 

ALTER DATABASE EMODE 
ADD FILEGROUP SF_FG_05; 

ALTER DATABASE EMODE 
ADD FILEGROUP SF_FG_06; 

-- Storage files

ALTER DATABASE EMODE 
   ADD FILE (NAME = 'SF_FL_01', 
             FILENAME  = 'C:\Program Files\Microsoft SQL Server\MSSQL13.SQL2016\MSSQL\DATA\SF_FL_01.ndf', 
             SIZE = 1 GB,  
             FILEGROWTH = 5 MB)
TO FILEGROUP SF_FG_01;

ALTER DATABASE EMODE 
   ADD FILE (NAME = 'SF_FL_02', 
             FILENAME  = 'C:\Program Files\Microsoft SQL Server\MSSQL13.SQL2016\MSSQL\DATA\SF_FL_02.ndf', 
             SIZE = 1 GB,  
             FILEGROWTH = 5 MB)  
TO FILEGROUP SF_FG_02; 

ALTER DATABASE EMODE 
   ADD FILE (NAME = 'SF_FL_03', 
             FILENAME  = 'C:\Program Files\Microsoft SQL Server\MSSQL13.SQL2016\MSSQL\DATA\SF_FL_03.ndf', 
             SIZE = 1 GB,  
             FILEGROWTH = 5 MB)  
TO FILEGROUP SF_FG_03; 

ALTER DATABASE EMODE 
   ADD FILE (NAME = 'SF_FL_04', 
             FILENAME  = 'C:\Program Files\Microsoft SQL Server\MSSQL13.SQL2016\MSSQL\DATA\SF_FL_04.ndf', 
             SIZE = 1 GB,  
             FILEGROWTH = 5 MB)  
TO FILEGROUP SF_FG_04; 

ALTER DATABASE EMODE 
   ADD FILE (NAME = 'SF_FL_05', 
             FILENAME  = 'C:\Program Files\Microsoft SQL Server\MSSQL13.SQL2016\MSSQL\DATA\SF_FL_05.ndf', 
             SIZE = 1 GB,  
             FILEGROWTH = 5 MB)  
TO FILEGROUP SF_FG_05;
 
ALTER DATABASE EMODE 
   ADD FILE (NAME = 'SF_FL_06', 
             FILENAME  = 'C:\Program Files\Microsoft SQL Server\MSSQL13.SQL2016\MSSQL\DATA\SF_FL_06.ndf', 
             SIZE = 1 GB,  
             FILEGROWTH = 5 MB)  
TO FILEGROUP SF_FG_06; 

-- Partitioning function
CREATE PARTITION FUNCTION SF_PF (NUMERIC(3,0))
AS
  RANGE RIGHT
  FOR VALUES (53,105,157,210,263);
  
-- Partitioning schema
CREATE PARTITION SCHEME SF_PS
AS PARTITION SF_PF 
TO (SF_FG_01,SF_FG_02,SF_FG_03,SF_FG_04,SF_FG_05,SF_FG_06);

-- Table temp
CREATE TABLE SHOP_FACTS_TEMP(
ID NUMERIC (5,0) NOT NULL
, ARTICLE_CODE NUMERIC (6,0)
, COLOR_CODE NUMERIC (4,0)
, WEEK_KEY NUMERIC (3,0)
, SHOP_CODE NUMERIC (3,0)
, MARGIN NUMERIC (18,0)
, AMOUNT_SOLD NUMERIC (13,2)
, QUANTITY_SOLD NUMERIC (13,2)
)

-- Insert sf data to table temp
INSERT INTO SHOP_FACTS_TEMP
SELECT * FROM SHOP_FACTS;

-- Delete SHOP_FACTS
DROP TABLE SHOP_FACTS;

-- The new sf
CREATE TABLE SHOP_FACTS(
ID NUMERIC (5,0) NOT NULL
, ARTICLE_CODE NUMERIC (6,0)
, COLOR_CODE NUMERIC (4,0)
, WEEK_KEY NUMERIC (3,0)
, SHOP_CODE NUMERIC (3,0)
, MARGIN NUMERIC (18,0)
, AMOUNT_SOLD NUMERIC (13,2)
, QUANTITY_SOLD NUMERIC (13,2)
)
ON SF_PS (WEEK_KEY);

-- Add constraints
ALTER TABLE SHOP_FACTS
ADD CONSTRAINT PK_SHOP_FACTS PRIMARY KEY NONCLUSTERED (ID)
ON [PRIMARY];

ALTER TABLE SHOP_FACTS
ADD CONSTRAINT FK_SHOP_FACTS_ARTICLE_COLOR_LOOKUP
FOREIGN KEY (ARTICLE_CODE,COLOR_CODE)
REFERENCES ARTICLE_COLOR_LOOKUP(ARTICLE_CODE,COLOR_CODE);

ALTER TABLE SHOP_FACTS
ADD CONSTRAINT FK_SHOP_FACTS_ARTICLE_LOOKUP
FOREIGN KEY (ARTICLE_CODE)
REFERENCES ARTICLE_LOOKUP(ARTICLE_CODE);

ALTER TABLE SHOP_FACTS
ADD CONSTRAINT FK_SHOP_FACTS_CALENDAR_YEAR_LOOKUP
FOREIGN KEY (WEEK_KEY)
REFERENCES CALENDAR_YEAR_LOOKUP(WEEK_KEY);

ALTER TABLE SHOP_FACTS
ADD CONSTRAINT FK_SHOP_FACTS_OUTLET_LOOKUP
FOREIGN KEY (SHOP_CODE)
REFERENCES OUTLET_LOOKUP(SHOP_CODE);

-- Insert sf data to new sf
INSERT INTO SHOP_FACTS
SELECT * FROM SHOP_FACTS_TEMP;

-- Delete table temp
DROP TABLE SHOP_FACTS_TEMP;